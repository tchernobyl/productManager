angular.module("dragAndDrop",[]).directive("drag",["dndApi",function(a){var b=[];return{restrict:"A",link:function(c,d,e){var f=c.$eval(e.start),g=c.$eval(e.end),h=c.$eval(e.ngModel);d[0].addEventListener("dragstart",function(c){0===b.length&&(b=document.querySelectorAll(".drop")),angular.forEach(b,function(a){angular.element(a).addClass("draging")}),d.addClass("on-drag"),a.setData(h),(c.originalEvent||c).dataTransfer.effectAllowed="move",(c.originalEvent||c).dataTransfer.setData("text","no-data"),angular.isFunction(f)&&f(a.getData())}),d[0].addEventListener("dragend",function(){d.removeClass("on-drag"),angular.forEach(b,function(a){angular.element(a).removeClass("draging")}),angular.isFunction(g)&&g(a.getData()),a.removeData()}),d[0].draggable=!0,d.addClass("drag")}}}]).directive("drop",["dndApi",function(a){var b=[];return{link:function(c,d,e){var f=d[0],g=c.$eval(e.drop),h=c.$eval(e.enter),i=c.$eval(e.leave);ngModel=c.$eval(e.ngModel);var j=f.offsetLeft,k=j+f.offsetWidth,l=f.offsetTop,m=l+f.offsetHeight;f.addEventListener("drop",function(d){d.stopPropagation()&&d.preventDefault(),angular.isFunction(g)&&c.$apply(function(){g(a.getData(),f)}),0===b.length&&(b=document.querySelectorAll(".drop")),angular.forEach(b,function(a){angular.element(a).addClass("draging")}),a.removeData()}),f.addEventListener("dragenter",function(b){f===b.target&&angular.isFunction(h)&&h(a.getData(),f)}),f.addEventListener("dragleave",function(b){(b.x<j||b.x>k||b.y<l||b.y>m)&&angular.isFunction(i)&&i(a.getData(),f)}),f.addEventListener("dragover",function(a){return a.preventDefault&&a.preventDefault(),!1}),d.addClass("drop")}}}]).factory("dndApi",function(){var a={dragObject:{}};return{setData:function(b){a.dragObject=b},removeData:function(){delete a.dragObject},getData:function(){return a.dragObject}}});
//# sourceMappingURL=angular-dnd.min.js.map